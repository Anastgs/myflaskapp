name: Flask App CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  IMAGE_NAME: myflaskapp
  CLUSTER_NAME: myflaskapp-cluster

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # Étape 1: Checkout du code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Étape 2: Configuration de Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Étape 3: Installation sécurisée des outils Kubernetes
      - name: Install Kubernetes tools
        run: |
          # Installation de kubectl (méthode officielle)
          curl -fsSL -o kubectl "https://dl.k8s.io/release/$(curl -fsSL https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
          
          # Installation de minikube
          curl -fsSL -o minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install -o root -g root -m 0755 minikube /usr/local/bin/minikube
          
          # Vérification
          kubectl version --client
          minikube version

      # Étape 4: Démarrer Minikube
      - name: Start Minikube cluster
        run: |
          minikube start --driver=docker
          minikube status

      # Étape 5: Build de l'image Docker
      - name: Build Docker image
        run: |
          eval $(minikube docker-env)
          docker build -t $IMAGE_NAME:latest .

      # Étape 6: Déploiement Kubernetes
      - name: Deploy to Minikube
        run: |
          kubectl apply -f k8s/configmap.yaml
          kubectl apply -f k8s/secret.yaml
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
          kubectl apply -f k8s/ingress.yaml
          kubectl apply -f k8s/hpa.yaml
          
          # Attendre que le déploiement soit prêt
          kubectl rollout status deployment/myflaskapp --timeout=120s

      # Étape 7: Tests
      - name: Run smoke tests
        run: |
          # Exposer temporairement le service
          kubectl port-forward svc/myflaskapp-service 5000:80 &
          sleep 5
          
          # Tests des endpoints
          curl -s http://localhost:5000/api/events | jq .
          curl -s http://localhost:5000/api/news | jq .
          
          # Vérification HPA
          kubectl get hpa

      # Étape 8: Nettoyage (optionnel)
      - name: Cleanup (optional)
        if: always()
        run: |
          minikube delete